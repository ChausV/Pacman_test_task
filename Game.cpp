#include "Game.h"

#include <iostream>

Game::Game() : field_h(23), field_w(23)
{
	char temp[][field_w] = {
		{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'},
		{'X','.','.','.','.','.','.','.','.','.','.','X','.','.','.','.','.','.','.','.','.','.','X'},
		{'X','.','X','X','X','.','X','X','X','X','.','X','.','X','X','X','X','.','X','X','X','.','X'},
		{'X','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','X'},
		{'X','.','X','X','X','.','X','.','X','X','X','X','X','X','X','.','X','.','X','X','X','.','X'},
		{'X','.','.','.','.','.','X','.','.','.','.','X','.','.','.','.','X','.','.','.','.','.','X'},
		{'X','X','X','X','X','.','X','X','X','X','.','X','.','X','X','X','X','.','X','X','X','X','X'},
		{' ',' ',' ',' ','X','.','X',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','.','X',' ',' ',' ',' '},
		{' ',' ',' ',' ','X','.','X',' ','X','X','X','X','X','X','X',' ','X','.','X',' ',' ',' ',' '},
		{'X','X','X','X','X','.','X',' ','X',' ',' ',' ',' ',' ','X',' ','X','.','X','X','X','X','X'},
		{' ',' ',' ',' ',' ','.',' ',' ','X',' ',' ',' ',' ',' ','X',' ',' ','.',' ',' ',' ',' ',' '},
		{'X','X','X','X','X','.','X',' ','X',' ',' ',' ',' ',' ','X',' ','X','.','X','X','X','X','X'},
		{' ',' ',' ',' ','X','.','X',' ','X','X','X','X','X','X','X',' ','X','.','X',' ',' ',' ',' '},
		{' ',' ',' ',' ','X','.','X',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','.','X',' ',' ',' ',' '},
		{'X','X','X','X','X','.','X',' ','X','X','X','X','X','X','X',' ','X','.','X','X','X','X','X'},
		{'X','.','.','.','.','.','.','.','.','.','.','X','.','.','.','.','.','.','.','.','.','.','X'},
		{'X','.','X','X','X','.','X','X','X','X','.','X','.','X','X','X','X','.','X','X','X','.','X'},
		{'X','.','.','.','X','.','.','.','.','.','.','.','.','.','.','.','.','.','X','.','.','.','X'},
		{'X','X','X','.','X','.','X','.','X','X','X','X','X','X','X','.','X','.','X','.','X','X','X'},
		{'X','.','.','.','.','.','X','.','.','.','.','X','.','.','.','.','X','.','.','.','.','.','X'},
		{'X','.','X','X','X','X','X','X','X','X','.','X','.','X','X','X','X','X','X','X','X','.','X'},
		{'X','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','X'},
		{'X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X','X'}
	};
	field = new char*[field_h];
	for(int i = 0; i < field_h; ++i)
	{
		field[i] = new char[field_w];
		for(int j = 0; j < field_w; ++j)
		{
			field[i][j] = temp[i][j];
		}
	}
	std::cout << "Constructor Game" << std::endl;
}

Game::~Game()
{
	for(int i = 0; i < field_h; ++i)
	{
		delete [] field[i];
	}
	delete [] field;
	std::cout << "Destructor Game" << std::endl;
}

int Game::getFieldHeight() const
{
	return field_h;
}

int Game::getFieldWidth() const
{
	return field_w;
}

char ** Game::getField() const
{
	return field;
}
